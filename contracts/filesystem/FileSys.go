// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package filesystem

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// FileSysMetaData contains all meta data concerning the FileSys contract.
var FileSysMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"founder\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_gIndex\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rfs\",\"type\":\"address\"},{\"internalType\":\"uint64[]\",\"name\":\"_keepers\",\"type\":\"uint64[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_kIndex\",\"type\":\"uint64\"}],\"name\":\"addKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_kIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_uIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_pIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_tIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"name\":\"addOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"kIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newPro\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tokenIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"name\":\"addRepair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_uIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_payToken\",\"type\":\"uint32\"}],\"name\":\"createFs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tIndex\",\"type\":\"uint32\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"user\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"provider\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"token\",\"type\":\"uint32\"}],\"name\":\"getChannelInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"user\",\"type\":\"uint64\"}],\"name\":\"getFsInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"_tokenIndex\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"user\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"provider\",\"type\":\"uint64\"}],\"name\":\"getFsInfoAggOrder\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"pIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tIndex\",\"type\":\"uint32\"}],\"name\":\"getSettleInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"user\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"provider\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"token\",\"type\":\"uint32\"}],\"name\":\"getStoreInfo\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"pIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tokenIndex\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"pAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost\",\"type\":\"uint256\"}],\"name\":\"proWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"uIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tIndex\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"uAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"recharge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"role\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rolefs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_kIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"uIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_pIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_tokenIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"name\":\"subOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"kIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newPro\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"size\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tokenIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sprice\",\"type\":\"uint256\"}],\"name\":\"subRepair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"tokenIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"roleType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x608060405260046000806101000a81548160ff021916908360ff1602179055506001600060016101000a81548160ff021916908360ff1602179055503480156200004857600080fd5b50604051620060383803806200603883398181016040528101906200006e9190620005e4565b82600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000600a6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083600060026101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600460000160006101000a81548160ff021916908315150217905550806007908051906020019062000178929190620002cf565b506001600860006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550426008806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060005b6007805490508167ffffffffffffffff16101562000295576001600b600060078467ffffffffffffffff16815481106200020d576200020c6200068b565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080806200028c90620006e9565b915050620001ce565b50600780549050600a60006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050506200071f565b828054828255906000526020600020906003016004900481019282156200037f5791602002820160005b838211156200034757835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509260200192600801602081600701049283019260010302620002f9565b80156200037d5782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030262000347565b505b5090506200038e919062000392565b5090565b5b80821115620003ad57600081600090555060010162000393565b5090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b620003e481620003c5565b8114620003f057600080fd5b50565b6000815190506200040481620003d9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000437826200040a565b9050919050565b62000449816200042a565b81146200045557600080fd5b50565b60008151905062000469816200043e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004bf8262000474565b810181811067ffffffffffffffff82111715620004e157620004e062000485565b5b80604052505050565b6000620004f6620003b1565b9050620005048282620004b4565b919050565b600067ffffffffffffffff82111562000527576200052662000485565b5b602082029050602081019050919050565b600080fd5b6000620005546200054e8462000509565b620004ea565b905080838252602082019050602084028301858111156200057a576200057962000538565b5b835b81811015620005a75780620005928882620003f3565b8452602084019350506020810190506200057c565b5050509392505050565b600082601f830112620005c957620005c86200046f565b5b8151620005db8482602086016200053d565b91505092915050565b600080600080600060a08688031215620006035762000602620003bb565b5b60006200061388828901620003f3565b95505060206200062688828901620003f3565b9450506040620006398882890162000458565b93505060606200064c8882890162000458565b925050608086015167ffffffffffffffff81111562000670576200066f620003c0565b5b6200067e88828901620005b1565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006f682620003c5565b915067ffffffffffffffff821415620007145762000713620006ba565b5b600182019050919050565b615909806200072f6000396000f3fe6080604052600436106101025760003560e01c806375818519116100955780638f6c3f03116100645780638f6c3f0314610371578063bab8d63a1461039a578063cc122253146103c3578063dee6873314610402578063e04f98ed1461042b57610109565b8063758185191461029a578063761966b7146102c35780637b31a24d146103015780638026d0401461034857610109565b8063324ab551116100d1578063324ab551146101cb5780633f5f363e1461020957806350cbb46f1461024857806369eafd021461027157610109565b806303eb18aa1461010e5780630f60c7b31461014c57806310055c1d146101755780632d6d777e146101a057610109565b3661010957005b600080fd5b34801561011a57600080fd5b506101356004803603810190610130919061488d565b610454565b6040516101439291906148dc565b60405180910390f35b34801561015857600080fd5b50610173600480360381019061016e9190614977565b610530565b005b34801561018157600080fd5b5061018a610b7d565b6040516101979190614a82565b60405180910390f35b3480156101ac57600080fd5b506101b5610ba3565b6040516101c29190614a82565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed9190614a9d565b610bc9565b604051610200929190614af4565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190614b1d565b610c48565b60405161023f93929190614b7f565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a9190614a9d565b610ddd565b005b34801561027d57600080fd5b5061029860048036038101906102939190614be2565b610f62565b005b3480156102a657600080fd5b506102c160048036038101906102bc9190614c6f565b61134e565b005b3480156102cf57600080fd5b506102ea60048036038101906102e59190614d25565b6118c0565b6040516102f8929190614d65565b60405180910390f35b34801561030d57600080fd5b5061032860048036038101906103239190614d25565b611c5b565b60405161033f9b9a99989796959493929190614d8e565b60405180910390f35b34801561035457600080fd5b5061036f600480360381019061036a9190614d25565b611dde565b005b34801561037d57600080fd5b5061039860048036038101906103939190614977565b611fd2565b005b3480156103a657600080fd5b506103c160048036038101906103bc9190614e72565b61267a565b005b3480156103cf57600080fd5b506103ea60048036038101906103e59190614b1d565b612c61565b6040516103f993929190614eff565b60405180910390f35b34801561040e57600080fd5b5061042960048036038101906104249190614977565b612df6565b005b34801561043757600080fd5b50610452600480360381019061044d9190614f36565b61379d565b005b600080600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff16600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff16915091509250929050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b79061500e565b60405180910390fd5b60008467ffffffffffffffff161161060d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106049061507a565b60405180910390fd5b6000600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008463ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050905060008160e001518260c0015161073591906150c9565b90506000888861074591906150fd565b67ffffffffffffffff168461075a9190615131565b9050600060648261076b91906151ba565b905060008060009054906101000a900460ff1660ff168261078c9190615131565b9050828410156107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890615237565b60405180910390fd5b6107da8c6139b3565b6108385760046001018c90806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b8767ffffffffffffffff16600460020160008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c6906152a3565b60405180910390fd5b85600460020160008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008963ffffffff1663ffffffff168152602001908152602001600020600101600082825461092c91906152c3565b9250508190555088600460020160008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008963ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff166109a39190615319565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506109d88c888d8c8a8887613a4f565b600460020160008d67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600081819054906101000a900467ffffffffffffffff1680929190610a2990615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505082600c60008f67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008963ffffffff1663ffffffff1681526020019081526020016000206006016000828254610aa791906152c3565b92505081905550600b60008f67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff1680929190610af990615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600a600081819054906101000a900467ffffffffffffffff1680929190610b4690615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505050505050505050505050505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169150600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160019054906101000a900463ffffffff169050915091565b6000806000600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008563ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff16600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008663ffffffff1663ffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008763ffffffff1663ffffffff1681526020019081526020016000206001015492509250925093509350939050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e649061500e565b60405180910390fd5b60078190806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600b60008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600a600081819054906101000a900467ffffffffffffffff1680929190610f3890615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe99061500e565b60405180910390fd5b600061100087878585613e75565b905060008114156110115750611346565b6000600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050905060006064826080015161113691906151ba565b90506004816111459190615131565b90508161014001518111156111fc578161014001518161116591906150c9565b905080600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff16815260200190815260200160002060090160008282546111be91906152c3565b9250508190555080600960008a63ffffffff1663ffffffff16815260200190815260200160002060008282546111f491906152c3565b925050819055505b6000600160008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff168152602001908152602001600020549050808461125191906152c3565b935083600160008c67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008b63ffffffff1663ffffffff168152602001908152602001600020819055506112a787898661423f565b6112e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dd906153d4565b60405180910390fd5b83600160008c67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008b63ffffffff1663ffffffff168152602001908152602001600020600082825461133a91906150c9565b92505081905550505050505b505050505050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d59061500e565b60405180910390fd5b60008467ffffffffffffffff1611801561140b57508567ffffffffffffffff168567ffffffffffffffff16115b80156114215750428567ffffffffffffffff1611155b611460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114579061507a565b60405180910390fd5b8267ffffffffffffffff16600460020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16146114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ee90615440565b60405180910390fd5b8367ffffffffffffffff16600460020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1610156115af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a6906154ac565b60405180910390fd5b80600460020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff168152602001908152602001600020600101600082825461160c91906150c9565b9250508190555083600460020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff1661168391906150fd565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506116b68783878785614362565b600086866116c491906150fd565b67ffffffffffffffff16826116d99190615131565b90506064816116e891906151ba565b905080600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff168152602001908152602001600020600801600082825461174191906152c3565b9250508190555080600960008563ffffffff1663ffffffff168152602001908152602001600020600082825461177791906152c3565b92505081905550600460020160008967ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600881819054906101000a900467ffffffffffffffff16809291906117cf90615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600b60008a67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff168092919061184190615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600a600081819054906101000a900467ffffffffffffffff168092919061188e90615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050505050505050565b6000806000600160008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff1681526020019081526020016000205490506000600c60008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050905060008160a0015190506000826000015167ffffffffffffffff1642611a4391906150c9565b9050826020015167ffffffffffffffff1681611a5f9190615131565b9050826040015181611a719190615131565b90508082611a7f91906152c3565b91508260c001518360600151611a9591906150c9565b905080821115611aa3578091505b826080015182611ab391906150c9565b90506000600a60009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415611aed5783819550955050505050611c54565b6000600b60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614611c49576000600a60009054906101000a900467ffffffffffffffff16600b60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16611b9991906154cc565b67ffffffffffffffff1690506000600960008a63ffffffff1663ffffffff1681526020019081526020016000205482611bd29190615131565b9050600860009054906101000a900467ffffffffffffffff1667ffffffffffffffff1660088054906101000a900467ffffffffffffffff1667ffffffffffffffff1642611c1f91906150c9565b10611c37578086611c3091906152c3565b9550611c46565b8083611c4391906152c3565b92505b50505b838195509550505050505b9250929050565b600080600080600080600080600080600080600c60008f67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008e63ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820154815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001519b509b509b509b509b509b509b509b509b509b509b50509295989b509295989b9093969950565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e659061500e565b60405180910390fd5b600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615611ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edd90615549565b60405180910390fd5b80600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160016101000a81548163ffffffff021916908363ffffffff1602179055506001600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550611f7b816146a9565b611fce57600d8190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055505b5050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612062576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120599061500e565b60405180910390fd5b60008467ffffffffffffffff16116120af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a6906154ac565b60405180910390fd5b8567ffffffffffffffff168567ffffffffffffffff161180156120dc5750428567ffffffffffffffff1611155b61211b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612112906155b5565b60405180910390fd5b8267ffffffffffffffff16600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16146121d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ce90615440565b60405180910390fd5b8367ffffffffffffffff16600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff16815260200190815260200160002060000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1610156122b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ab906154ac565b60405180910390fd5b80600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff168152602001908152602001600020600101600082825461233691906150c9565b9250508190555083600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008463ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff166123d291906150fd565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600c60008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008363ffffffff1663ffffffff1681526020019081526020016000205061244a8783878785614362565b6000868661245891906150fd565b67ffffffffffffffff168261246d9190615131565b905060648161247c91906151ba565b905080600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008563ffffffff1663ffffffff16815260200190815260200160002060080160008282546124d591906152c3565b9250508190555080600960008563ffffffff1663ffffffff168152602001908152602001600020600082825461250b91906152c3565b92505081905550600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008967ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600881819054906101000a900467ffffffffffffffff168092919061258890615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600b60008b67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff16809291906125fa90615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600a600081819054906101000a900467ffffffffffffffff168092919061264790615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050505050505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461270a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127019061500e565b60405180910390fd5b6000811161274d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161274490615621565b60405180910390fd5b60038460ff161415612b5d576000429050600860009054906101000a900467ffffffffffffffff1667ffffffffffffffff1660088054906101000a900467ffffffffffffffff168261279f91906150fd565b67ffffffffffffffff161115612b5b576000600a60009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156127de5750612c59565b60005b600d80549050811015612b3157600060096000600d848154811061280857612807615641565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020549050600081141561285a5750612b1e565b6000600a60009054906101000a900467ffffffffffffffff1667ffffffffffffffff168261288891906151ba565b905060005b600780549050811015612abc576000600b6000600784815481106128b4576128b3615641565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16905060008167ffffffffffffffff1614156129bb576001600b60006007858154811061294457612943615641565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550612aa8565b60008167ffffffffffffffff16846129d39190615131565b90508060016000600786815481106129ee576129ed615641565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000600d8981548110612a5057612a4f615641565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206000828254612a9f91906152c3565b92505081905550505b508080612ab490615670565b91505061288d565b50600060096000600d8681548110612ad757612ad6615641565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000208190555050505b8080612b2990615670565b9150506127e1565b50806008806101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b505b6000600160008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008763ffffffff1663ffffffff16815260200190815260200160002054905080821115612bb2578091505b612bbd84848461423f565b612bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf3906153d4565b60405180910390fd5b81600160008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff1681526020019081526020016000206000828254612c5091906150c9565b92505081905550505b505050505050565b6000806000600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008563ffffffff1663ffffffff16815260200190815260200160002060000154600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008663ffffffff1663ffffffff16815260200190815260200160002060010160009054906101000a900467ffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008763ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1692509250925093509350939050565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e7d9061500e565b60405180910390fd5b60008467ffffffffffffffff1611612ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612eca90615705565b60405180910390fd5b600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16612f4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f4190615237565b60405180910390fd5b612f53826146a9565b612fa657600d8290806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055505b60008686612fb491906150fd565b67ffffffffffffffff1690508181612fcc9190615131565b905060008060009054906101000a900460ff1660ff16606483612fef91906151ba565b612ff99190615131565b905060008060019054906101000a900460ff1660ff1660648461301c91906151ba565b6130269190615131565b9050600081838561303791906152c3565b61304191906152c3565b905080600160008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff1681526020019081526020016000205410156130ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130c190615237565b60405180910390fd5b6000600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008863ffffffff1663ffffffff16815260200190815260200160002060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16141561327b57600360008d67ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206001018b90806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555088600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008863ffffffff1663ffffffff16815260200190815260200160002060010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b8667ffffffffffffffff16600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614613337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161332e90615440565b60405180910390fd5b8967ffffffffffffffff16600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008863ffffffff1663ffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161115613414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161340b906154ac565b60405180910390fd5b84600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008863ffffffff1663ffffffff168152602001908152602001600020600101600082825461349691906152c3565b9250508190555087600360008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160008863ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff166135329190615319565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506135678b878c8b898989613a4f565b600360008d67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020160008c67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600081819054906101000a900467ffffffffffffffff16809291906135dd90615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050816001600080600a9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff168152602001908152602001600020600082825461366d91906152c3565b9250508190555080600160008e67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff16815260200190815260200160002060008282546136c891906150c9565b92505081905550600b60008e67ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff168092919061371a90615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600a600081819054906101000a900467ffffffffffffffff168092919061376790615357565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050505050505050505050565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461382d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138249061500e565b60405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166138a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161389b90615771565b60405180910390fd5b6138ad846146a9565b61390057600d8490806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908363ffffffff1602179055505b600061390e8385308561473f565b905080613950576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613947906153d4565b60405180910390fd5b81600160008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008763ffffffff1663ffffffff16815260200190815260200160002060008282546139a491906152c3565b92505081905550505050505050565b600080600090505b600460010180549050811015613a44578267ffffffffffffffff16600460010182815481106139ed576139ec615641565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff161415613a31576001915050613a4a565b8080613a3c90615670565b9150506139bb565b50600090505b919050565b6000600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050905060008667ffffffffffffffff16826000015167ffffffffffffffff161015613c1257816000015187613b9391906150fd565b67ffffffffffffffff16905086600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff16815260200190815260200160002060000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550613c50565b8667ffffffffffffffff16826000015167ffffffffffffffff161115613c4f57868260000151613c4291906150fd565b67ffffffffffffffff1690505b5b816040015181613c609190615131565b905080600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff1681526020019081526020016000206004016000828254613cb991906152c3565b9250508190555084600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff1681526020019081526020016000206001016000828254613d1791906152c3565b9250508190555085600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff16613d889190615319565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff1681526020019081526020016000206002016000828254613e0591906152c3565b9250508190555082600c60008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008a63ffffffff1663ffffffff1681526020019081526020016000206007016000828254613e6391906152c3565b92505081905550505050505050505050565b600080600c60008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505090508381608001511180613f9e5750828160c0015110155b15613fad576000915050614237565b82600c60008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008763ffffffff1663ffffffff1681526020019081526020016000206005018190555060004290508067ffffffffffffffff16826000015167ffffffffffffffff16101561411c57600082600001518261403091906150fd565b67ffffffffffffffff16905082604001518161404c9190615131565b905080600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008963ffffffff1663ffffffff16815260200190815260200160002060040160008282546140a591906152c3565b9250508190555081600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008963ffffffff1663ffffffff16815260200190815260200160002060000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505b84600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff16815260200190815260200160002060040154101561417657600092505050614237565b84600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff1681526020019081526020016000206003015411156141d057600092505050614237565b60008260800151866141e291906150c9565b905085600c60008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008963ffffffff1663ffffffff168152602001908152602001600020600301819055508093505050505b949350505050565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856040516024016142a9929190615791565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516143139190615834565b600060405180830381855afa9150503d806000811461434e576040519150601f19603f3d011682016040523d82523d6000602084013e614353565b606091505b50509050809150509392505050565b6000600c60008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008663ffffffff1663ffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050905060008467ffffffffffffffff16826000015167ffffffffffffffff161015614525578160000151856144a691906150fd565b67ffffffffffffffff16905084600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff16815260200190815260200160002060000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550614542565b84826000015161453591906150fd565b67ffffffffffffffff1690505b8160400151816145529190615131565b905080600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff16815260200190815260200160002060040160008282546145ab91906152c3565b9250508190555082600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff168152602001908152602001600020600101600082825461460991906150c9565b9250508190555083600c60008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008863ffffffff1663ffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff1661467a91906150fd565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050505050565b600080600090505b600d805490508163ffffffff161015614734578263ffffffff16600d8263ffffffff16815481106146e5576146e4615641565b5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff16141561472157600191505061473a565b808061472c9061584b565b9150506146b1565b50600090505b919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166040518060600160405280602481526020016158b0602491398051906020012086868660405160240161478e93929190615878565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516147f89190615834565b600060405180830381855afa9150503d8060008114614833576040519150601f19603f3d011682016040523d82523d6000602084013e614838565b606091505b5050905080915050949350505050565b600080fd5b600067ffffffffffffffff82169050919050565b61486a8161484d565b811461487557600080fd5b50565b60008135905061488781614861565b92915050565b600080604083850312156148a4576148a3614848565b5b60006148b285828601614878565b92505060206148c385828601614878565b9150509250929050565b6148d68161484d565b82525050565b60006040820190506148f160008301856148cd565b6148fe60208301846148cd565b9392505050565b600063ffffffff82169050919050565b61491e81614905565b811461492957600080fd5b50565b60008135905061493b81614915565b92915050565b6000819050919050565b61495481614941565b811461495f57600080fd5b50565b6000813590506149718161494b565b92915050565b60008060008060008060008060006101208a8c03121561499a57614999614848565b5b60006149a88c828d01614878565b99505060206149b98c828d01614878565b98505060406149ca8c828d01614878565b97505060606149db8c828d01614878565b96505060806149ec8c828d01614878565b95505060a06149fd8c828d01614878565b94505060c0614a0e8c828d01614878565b93505060e0614a1f8c828d0161492c565b925050610100614a318c828d01614962565b9150509295985092959850929598565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614a6c82614a41565b9050919050565b614a7c81614a61565b82525050565b6000602082019050614a976000830184614a73565b92915050565b600060208284031215614ab357614ab2614848565b5b6000614ac184828501614878565b91505092915050565b60008115159050919050565b614adf81614aca565b82525050565b614aee81614905565b82525050565b6000604082019050614b096000830185614ad6565b614b166020830184614ae5565b9392505050565b600080600060608486031215614b3657614b35614848565b5b6000614b4486828701614878565b9350506020614b5586828701614878565b9250506040614b668682870161492c565b9150509250925092565b614b7981614941565b82525050565b6000606082019050614b9460008301866148cd565b614ba160208301856148cd565b614bae6040830184614b70565b949350505050565b614bbf81614a61565b8114614bca57600080fd5b50565b600081359050614bdc81614bb6565b92915050565b60008060008060008060c08789031215614bff57614bfe614848565b5b6000614c0d89828a01614878565b9650506020614c1e89828a0161492c565b9550506040614c2f89828a01614bcd565b9450506060614c4089828a01614bcd565b9350506080614c5189828a01614962565b92505060a0614c6289828a01614962565b9150509295509295509295565b600080600080600080600080610100898b031215614c9057614c8f614848565b5b6000614c9e8b828c01614878565b9850506020614caf8b828c01614878565b9750506040614cc08b828c01614878565b9650506060614cd18b828c01614878565b9550506080614ce28b828c01614878565b94505060a0614cf38b828c01614878565b93505060c0614d048b828c0161492c565b92505060e0614d158b828c01614962565b9150509295985092959890939650565b60008060408385031215614d3c57614d3b614848565b5b6000614d4a85828601614878565b9250506020614d5b8582860161492c565b9150509250929050565b6000604082019050614d7a6000830185614b70565b614d876020830184614b70565b9392505050565b600061016082019050614da4600083018e6148cd565b614db1602083018d6148cd565b614dbe604083018c614b70565b614dcb606083018b614b70565b614dd8608083018a614b70565b614de560a0830189614b70565b614df260c0830188614b70565b614dff60e0830187614b70565b614e0d610100830186614b70565b614e1b610120830185614b70565b614e29610140830184614b70565b9c9b505050505050505050505050565b600060ff82169050919050565b614e4f81614e39565b8114614e5a57600080fd5b50565b600081359050614e6c81614e46565b92915050565b60008060008060008060c08789031215614e8f57614e8e614848565b5b6000614e9d89828a01614878565b9650506020614eae89828a0161492c565b9550506040614ebf89828a01614e5d565b9450506060614ed089828a01614bcd565b9350506080614ee189828a01614bcd565b92505060a0614ef289828a01614962565b9150509295509295509295565b6000606082019050614f146000830186614b70565b614f2160208301856148cd565b614f2e60408301846148cd565b949350505050565b600080600080600060a08688031215614f5257614f51614848565b5b6000614f6088828901614878565b9550506020614f718882890161492c565b9450506040614f8288828901614bcd565b9350506060614f9388828901614bcd565b9250506080614fa488828901614962565b9150509295509295909350565b600082825260208201905092915050565b7f4e00000000000000000000000000000000000000000000000000000000000000600082015250565b6000614ff8600183614fb1565b915061500382614fc2565b602082019050919050565b6000602082019050818103600083015261502781614feb565b9050919050565b7f4950000000000000000000000000000000000000000000000000000000000000600082015250565b6000615064600283614fb1565b915061506f8261502e565b602082019050919050565b6000602082019050818103600083015261509381615057565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006150d482614941565b91506150df83614941565b9250828210156150f2576150f161509a565b5b828203905092915050565b60006151088261484d565b91506151138361484d565b9250828210156151265761512561509a565b5b828203905092915050565b600061513c82614941565b915061514783614941565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156151805761517f61509a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006151c582614941565b91506151d083614941565b9250826151e0576151df61518b565b5b828204905092915050565b7f4e45000000000000000000000000000000000000000000000000000000000000600082015250565b6000615221600283614fb1565b915061522c826151eb565b602082019050919050565b6000602082019050818103600083015261525081615214565b9050919050565b7f494e000000000000000000000000000000000000000000000000000000000000600082015250565b600061528d600283614fb1565b915061529882615257565b602082019050919050565b600060208201905081810360008301526152bc81615280565b9050919050565b60006152ce82614941565b91506152d983614941565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561530e5761530d61509a565b5b828201905092915050565b60006153248261484d565b915061532f8361484d565b92508267ffffffffffffffff0382111561534c5761534b61509a565b5b828201905092915050565b60006153628261484d565b915067ffffffffffffffff82141561537d5761537c61509a565b5b600182019050919050565b7f5446000000000000000000000000000000000000000000000000000000000000600082015250565b60006153be600283614fb1565b91506153c982615388565b602082019050919050565b600060208201905081810360008301526153ed816153b1565b9050919050565b7f454e000000000000000000000000000000000000000000000000000000000000600082015250565b600061542a600283614fb1565b9150615435826153f4565b602082019050919050565b600060208201905081810360008301526154598161541d565b9050919050565b7f4553000000000000000000000000000000000000000000000000000000000000600082015250565b6000615496600283614fb1565b91506154a182615460565b602082019050919050565b600060208201905081810360008301526154c581615489565b9050919050565b60006154d78261484d565b91506154e28361484d565b9250826154f2576154f161518b565b5b828204905092915050565b7f4500000000000000000000000000000000000000000000000000000000000000600082015250565b6000615533600183614fb1565b915061553e826154fd565b602082019050919050565b6000602082019050818103600083015261556281615526565b9050919050565b7f4554000000000000000000000000000000000000000000000000000000000000600082015250565b600061559f600283614fb1565b91506155aa82615569565b602082019050919050565b600060208201905081810360008301526155ce81615592565b9050919050565b7f4e5a000000000000000000000000000000000000000000000000000000000000600082015250565b600061560b600283614fb1565b9150615616826155d5565b602082019050919050565b6000602082019050818103600083015261563a816155fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061567b82614941565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156156ae576156ad61509a565b5b600182019050919050565b7f5a00000000000000000000000000000000000000000000000000000000000000600082015250565b60006156ef600183614fb1565b91506156fa826156b9565b602082019050919050565b6000602082019050818103600083015261571e816156e2565b9050919050565b7f4e41000000000000000000000000000000000000000000000000000000000000600082015250565b600061575b600283614fb1565b915061576682615725565b602082019050919050565b6000602082019050818103600083015261578a8161574e565b9050919050565b60006040820190506157a66000830185614a73565b6157b36020830184614b70565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156157ee5780820151818401526020810190506157d3565b838111156157fd576000848401525b50505050565b600061580e826157ba565b61581881856157c5565b93506158288185602086016157d0565b80840191505092915050565b60006158408284615803565b915081905092915050565b600061585682614905565b915063ffffffff82141561586d5761586c61509a565b5b600182019050919050565b600060608201905061588d6000830186614a73565b61589a6020830185614a73565b6158a76040830184614b70565b94935050505056fe7472616e7366657246726f6d28616464726573732c616464726573732c75696e74323536a2646970667358221220da70058b7154eaa7605d5e03aee837238bb947f1cf4710f740be08f20b58b91464736f6c634300080a0033",
}

// FileSysABI is the input ABI used to generate the binding from.
// Deprecated: Use FileSysMetaData.ABI instead.
var FileSysABI = FileSysMetaData.ABI

// FileSysBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FileSysMetaData.Bin instead.
var FileSysBin = FileSysMetaData.Bin

// DeployFileSys deploys a new Ethereum contract, binding an instance of FileSys to it.
func DeployFileSys(auth *bind.TransactOpts, backend bind.ContractBackend, founder uint64, _gIndex uint64, r common.Address, rfs common.Address, _keepers []uint64) (common.Address, *types.Transaction, *FileSys, error) {
	parsed, err := FileSysMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FileSysBin), backend, founder, _gIndex, r, rfs, _keepers)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FileSys{FileSysCaller: FileSysCaller{contract: contract}, FileSysTransactor: FileSysTransactor{contract: contract}, FileSysFilterer: FileSysFilterer{contract: contract}}, nil
}

// FileSys is an auto generated Go binding around an Ethereum contract.
type FileSys struct {
	FileSysCaller     // Read-only binding to the contract
	FileSysTransactor // Write-only binding to the contract
	FileSysFilterer   // Log filterer for contract events
}

// FileSysCaller is an auto generated read-only Go binding around an Ethereum contract.
type FileSysCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FileSysTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FileSysTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FileSysFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FileSysFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FileSysSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FileSysSession struct {
	Contract     *FileSys          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FileSysCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FileSysCallerSession struct {
	Contract *FileSysCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// FileSysTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FileSysTransactorSession struct {
	Contract     *FileSysTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// FileSysRaw is an auto generated low-level Go binding around an Ethereum contract.
type FileSysRaw struct {
	Contract *FileSys // Generic contract binding to access the raw methods on
}

// FileSysCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FileSysCallerRaw struct {
	Contract *FileSysCaller // Generic read-only contract binding to access the raw methods on
}

// FileSysTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FileSysTransactorRaw struct {
	Contract *FileSysTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFileSys creates a new instance of FileSys, bound to a specific deployed contract.
func NewFileSys(address common.Address, backend bind.ContractBackend) (*FileSys, error) {
	contract, err := bindFileSys(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FileSys{FileSysCaller: FileSysCaller{contract: contract}, FileSysTransactor: FileSysTransactor{contract: contract}, FileSysFilterer: FileSysFilterer{contract: contract}}, nil
}

// NewFileSysCaller creates a new read-only instance of FileSys, bound to a specific deployed contract.
func NewFileSysCaller(address common.Address, caller bind.ContractCaller) (*FileSysCaller, error) {
	contract, err := bindFileSys(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FileSysCaller{contract: contract}, nil
}

// NewFileSysTransactor creates a new write-only instance of FileSys, bound to a specific deployed contract.
func NewFileSysTransactor(address common.Address, transactor bind.ContractTransactor) (*FileSysTransactor, error) {
	contract, err := bindFileSys(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FileSysTransactor{contract: contract}, nil
}

// NewFileSysFilterer creates a new log filterer instance of FileSys, bound to a specific deployed contract.
func NewFileSysFilterer(address common.Address, filterer bind.ContractFilterer) (*FileSysFilterer, error) {
	contract, err := bindFileSys(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FileSysFilterer{contract: contract}, nil
}

// bindFileSys binds a generic wrapper to an already deployed contract.
func bindFileSys(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FileSysABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FileSys *FileSysRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FileSys.Contract.FileSysCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FileSys *FileSysRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FileSys.Contract.FileSysTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FileSys *FileSysRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FileSys.Contract.FileSysTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FileSys *FileSysCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FileSys.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FileSys *FileSysTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FileSys.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FileSys *FileSysTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FileSys.Contract.contract.Transact(opts, method, params...)
}

// GetBalance is a free data retrieval call binding the contract method 0x761966b7.
//
// Solidity: function getBalance(uint64 index, uint32 tIndex) view returns(uint256, uint256)
func (_FileSys *FileSysCaller) GetBalance(opts *bind.CallOpts, index uint64, tIndex uint32) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getBalance", index, tIndex)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetBalance is a free data retrieval call binding the contract method 0x761966b7.
//
// Solidity: function getBalance(uint64 index, uint32 tIndex) view returns(uint256, uint256)
func (_FileSys *FileSysSession) GetBalance(index uint64, tIndex uint32) (*big.Int, *big.Int, error) {
	return _FileSys.Contract.GetBalance(&_FileSys.CallOpts, index, tIndex)
}

// GetBalance is a free data retrieval call binding the contract method 0x761966b7.
//
// Solidity: function getBalance(uint64 index, uint32 tIndex) view returns(uint256, uint256)
func (_FileSys *FileSysCallerSession) GetBalance(index uint64, tIndex uint32) (*big.Int, *big.Int, error) {
	return _FileSys.Contract.GetBalance(&_FileSys.CallOpts, index, tIndex)
}

// GetChannelInfo is a free data retrieval call binding the contract method 0xcc122253.
//
// Solidity: function getChannelInfo(uint64 user, uint64 provider, uint32 token) view returns(uint256, uint64, uint64)
func (_FileSys *FileSysCaller) GetChannelInfo(opts *bind.CallOpts, user uint64, provider uint64, token uint32) (*big.Int, uint64, uint64, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getChannelInfo", user, provider, token)

	if err != nil {
		return *new(*big.Int), *new(uint64), *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(uint64)).(*uint64)

	return out0, out1, out2, err

}

// GetChannelInfo is a free data retrieval call binding the contract method 0xcc122253.
//
// Solidity: function getChannelInfo(uint64 user, uint64 provider, uint32 token) view returns(uint256, uint64, uint64)
func (_FileSys *FileSysSession) GetChannelInfo(user uint64, provider uint64, token uint32) (*big.Int, uint64, uint64, error) {
	return _FileSys.Contract.GetChannelInfo(&_FileSys.CallOpts, user, provider, token)
}

// GetChannelInfo is a free data retrieval call binding the contract method 0xcc122253.
//
// Solidity: function getChannelInfo(uint64 user, uint64 provider, uint32 token) view returns(uint256, uint64, uint64)
func (_FileSys *FileSysCallerSession) GetChannelInfo(user uint64, provider uint64, token uint32) (*big.Int, uint64, uint64, error) {
	return _FileSys.Contract.GetChannelInfo(&_FileSys.CallOpts, user, provider, token)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x324ab551.
//
// Solidity: function getFsInfo(uint64 user) view returns(bool _isActive, uint32 _tokenIndex)
func (_FileSys *FileSysCaller) GetFsInfo(opts *bind.CallOpts, user uint64) (struct {
	IsActive   bool
	TokenIndex uint32
}, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getFsInfo", user)

	outstruct := new(struct {
		IsActive   bool
		TokenIndex uint32
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.IsActive = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.TokenIndex = *abi.ConvertType(out[1], new(uint32)).(*uint32)

	return *outstruct, err

}

// GetFsInfo is a free data retrieval call binding the contract method 0x324ab551.
//
// Solidity: function getFsInfo(uint64 user) view returns(bool _isActive, uint32 _tokenIndex)
func (_FileSys *FileSysSession) GetFsInfo(user uint64) (struct {
	IsActive   bool
	TokenIndex uint32
}, error) {
	return _FileSys.Contract.GetFsInfo(&_FileSys.CallOpts, user)
}

// GetFsInfo is a free data retrieval call binding the contract method 0x324ab551.
//
// Solidity: function getFsInfo(uint64 user) view returns(bool _isActive, uint32 _tokenIndex)
func (_FileSys *FileSysCallerSession) GetFsInfo(user uint64) (struct {
	IsActive   bool
	TokenIndex uint32
}, error) {
	return _FileSys.Contract.GetFsInfo(&_FileSys.CallOpts, user)
}

// GetFsInfoAggOrder is a free data retrieval call binding the contract method 0x03eb18aa.
//
// Solidity: function getFsInfoAggOrder(uint64 user, uint64 provider) view returns(uint64, uint64)
func (_FileSys *FileSysCaller) GetFsInfoAggOrder(opts *bind.CallOpts, user uint64, provider uint64) (uint64, uint64, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getFsInfoAggOrder", user, provider)

	if err != nil {
		return *new(uint64), *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)

	return out0, out1, err

}

// GetFsInfoAggOrder is a free data retrieval call binding the contract method 0x03eb18aa.
//
// Solidity: function getFsInfoAggOrder(uint64 user, uint64 provider) view returns(uint64, uint64)
func (_FileSys *FileSysSession) GetFsInfoAggOrder(user uint64, provider uint64) (uint64, uint64, error) {
	return _FileSys.Contract.GetFsInfoAggOrder(&_FileSys.CallOpts, user, provider)
}

// GetFsInfoAggOrder is a free data retrieval call binding the contract method 0x03eb18aa.
//
// Solidity: function getFsInfoAggOrder(uint64 user, uint64 provider) view returns(uint64, uint64)
func (_FileSys *FileSysCallerSession) GetFsInfoAggOrder(user uint64, provider uint64) (uint64, uint64, error) {
	return _FileSys.Contract.GetFsInfoAggOrder(&_FileSys.CallOpts, user, provider)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x7b31a24d.
//
// Solidity: function getSettleInfo(uint64 pIndex, uint32 tIndex) view returns(uint64, uint64, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256)
func (_FileSys *FileSysCaller) GetSettleInfo(opts *bind.CallOpts, pIndex uint64, tIndex uint32) (uint64, uint64, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getSettleInfo", pIndex, tIndex)

	if err != nil {
		return *new(uint64), *new(uint64), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	out4 := *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	out5 := *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	out6 := *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	out7 := *abi.ConvertType(out[7], new(*big.Int)).(**big.Int)
	out8 := *abi.ConvertType(out[8], new(*big.Int)).(**big.Int)
	out9 := *abi.ConvertType(out[9], new(*big.Int)).(**big.Int)
	out10 := *abi.ConvertType(out[10], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, out4, out5, out6, out7, out8, out9, out10, err

}

// GetSettleInfo is a free data retrieval call binding the contract method 0x7b31a24d.
//
// Solidity: function getSettleInfo(uint64 pIndex, uint32 tIndex) view returns(uint64, uint64, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256)
func (_FileSys *FileSysSession) GetSettleInfo(pIndex uint64, tIndex uint32) (uint64, uint64, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _FileSys.Contract.GetSettleInfo(&_FileSys.CallOpts, pIndex, tIndex)
}

// GetSettleInfo is a free data retrieval call binding the contract method 0x7b31a24d.
//
// Solidity: function getSettleInfo(uint64 pIndex, uint32 tIndex) view returns(uint64, uint64, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256)
func (_FileSys *FileSysCallerSession) GetSettleInfo(pIndex uint64, tIndex uint32) (uint64, uint64, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _FileSys.Contract.GetSettleInfo(&_FileSys.CallOpts, pIndex, tIndex)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x3f5f363e.
//
// Solidity: function getStoreInfo(uint64 user, uint64 provider, uint32 token) view returns(uint64, uint64, uint256)
func (_FileSys *FileSysCaller) GetStoreInfo(opts *bind.CallOpts, user uint64, provider uint64, token uint32) (uint64, uint64, *big.Int, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "getStoreInfo", user, provider, token)

	if err != nil {
		return *new(uint64), *new(uint64), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return out0, out1, out2, err

}

// GetStoreInfo is a free data retrieval call binding the contract method 0x3f5f363e.
//
// Solidity: function getStoreInfo(uint64 user, uint64 provider, uint32 token) view returns(uint64, uint64, uint256)
func (_FileSys *FileSysSession) GetStoreInfo(user uint64, provider uint64, token uint32) (uint64, uint64, *big.Int, error) {
	return _FileSys.Contract.GetStoreInfo(&_FileSys.CallOpts, user, provider, token)
}

// GetStoreInfo is a free data retrieval call binding the contract method 0x3f5f363e.
//
// Solidity: function getStoreInfo(uint64 user, uint64 provider, uint32 token) view returns(uint64, uint64, uint256)
func (_FileSys *FileSysCallerSession) GetStoreInfo(user uint64, provider uint64, token uint32) (uint64, uint64, *big.Int, error) {
	return _FileSys.Contract.GetStoreInfo(&_FileSys.CallOpts, user, provider, token)
}

// Role is a free data retrieval call binding the contract method 0x10055c1d.
//
// Solidity: function role() view returns(address)
func (_FileSys *FileSysCaller) Role(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "role")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Role is a free data retrieval call binding the contract method 0x10055c1d.
//
// Solidity: function role() view returns(address)
func (_FileSys *FileSysSession) Role() (common.Address, error) {
	return _FileSys.Contract.Role(&_FileSys.CallOpts)
}

// Role is a free data retrieval call binding the contract method 0x10055c1d.
//
// Solidity: function role() view returns(address)
func (_FileSys *FileSysCallerSession) Role() (common.Address, error) {
	return _FileSys.Contract.Role(&_FileSys.CallOpts)
}

// Rolefs is a free data retrieval call binding the contract method 0x2d6d777e.
//
// Solidity: function rolefs() view returns(address)
func (_FileSys *FileSysCaller) Rolefs(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _FileSys.contract.Call(opts, &out, "rolefs")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Rolefs is a free data retrieval call binding the contract method 0x2d6d777e.
//
// Solidity: function rolefs() view returns(address)
func (_FileSys *FileSysSession) Rolefs() (common.Address, error) {
	return _FileSys.Contract.Rolefs(&_FileSys.CallOpts)
}

// Rolefs is a free data retrieval call binding the contract method 0x2d6d777e.
//
// Solidity: function rolefs() view returns(address)
func (_FileSys *FileSysCallerSession) Rolefs() (common.Address, error) {
	return _FileSys.Contract.Rolefs(&_FileSys.CallOpts)
}

// AddKeeper is a paid mutator transaction binding the contract method 0x50cbb46f.
//
// Solidity: function addKeeper(uint64 _kIndex) returns()
func (_FileSys *FileSysTransactor) AddKeeper(opts *bind.TransactOpts, _kIndex uint64) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "addKeeper", _kIndex)
}

// AddKeeper is a paid mutator transaction binding the contract method 0x50cbb46f.
//
// Solidity: function addKeeper(uint64 _kIndex) returns()
func (_FileSys *FileSysSession) AddKeeper(_kIndex uint64) (*types.Transaction, error) {
	return _FileSys.Contract.AddKeeper(&_FileSys.TransactOpts, _kIndex)
}

// AddKeeper is a paid mutator transaction binding the contract method 0x50cbb46f.
//
// Solidity: function addKeeper(uint64 _kIndex) returns()
func (_FileSys *FileSysTransactorSession) AddKeeper(_kIndex uint64) (*types.Transaction, error) {
	return _FileSys.Contract.AddKeeper(&_FileSys.TransactOpts, _kIndex)
}

// AddOrder is a paid mutator transaction binding the contract method 0xdee68733.
//
// Solidity: function addOrder(uint64 _kIndex, uint64 _uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactor) AddOrder(opts *bind.TransactOpts, _kIndex uint64, _uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "addOrder", _kIndex, _uIndex, _pIndex, start, end, size, nonce, _tIndex, sprice)
}

// AddOrder is a paid mutator transaction binding the contract method 0xdee68733.
//
// Solidity: function addOrder(uint64 _kIndex, uint64 _uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tIndex, uint256 sprice) returns()
func (_FileSys *FileSysSession) AddOrder(_kIndex uint64, _uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.AddOrder(&_FileSys.TransactOpts, _kIndex, _uIndex, _pIndex, start, end, size, nonce, _tIndex, sprice)
}

// AddOrder is a paid mutator transaction binding the contract method 0xdee68733.
//
// Solidity: function addOrder(uint64 _kIndex, uint64 _uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactorSession) AddOrder(_kIndex uint64, _uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.AddOrder(&_FileSys.TransactOpts, _kIndex, _uIndex, _pIndex, start, end, size, nonce, _tIndex, sprice)
}

// AddRepair is a paid mutator transaction binding the contract method 0x0f60c7b3.
//
// Solidity: function addRepair(uint64 kIndex, uint64 pIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactor) AddRepair(opts *bind.TransactOpts, kIndex uint64, pIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "addRepair", kIndex, pIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// AddRepair is a paid mutator transaction binding the contract method 0x0f60c7b3.
//
// Solidity: function addRepair(uint64 kIndex, uint64 pIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysSession) AddRepair(kIndex uint64, pIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.AddRepair(&_FileSys.TransactOpts, kIndex, pIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// AddRepair is a paid mutator transaction binding the contract method 0x0f60c7b3.
//
// Solidity: function addRepair(uint64 kIndex, uint64 pIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactorSession) AddRepair(kIndex uint64, pIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.AddRepair(&_FileSys.TransactOpts, kIndex, pIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// CreateFs is a paid mutator transaction binding the contract method 0x8026d040.
//
// Solidity: function createFs(uint64 _uIndex, uint32 _payToken) returns()
func (_FileSys *FileSysTransactor) CreateFs(opts *bind.TransactOpts, _uIndex uint64, _payToken uint32) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "createFs", _uIndex, _payToken)
}

// CreateFs is a paid mutator transaction binding the contract method 0x8026d040.
//
// Solidity: function createFs(uint64 _uIndex, uint32 _payToken) returns()
func (_FileSys *FileSysSession) CreateFs(_uIndex uint64, _payToken uint32) (*types.Transaction, error) {
	return _FileSys.Contract.CreateFs(&_FileSys.TransactOpts, _uIndex, _payToken)
}

// CreateFs is a paid mutator transaction binding the contract method 0x8026d040.
//
// Solidity: function createFs(uint64 _uIndex, uint32 _payToken) returns()
func (_FileSys *FileSysTransactorSession) CreateFs(_uIndex uint64, _payToken uint32) (*types.Transaction, error) {
	return _FileSys.Contract.CreateFs(&_FileSys.TransactOpts, _uIndex, _payToken)
}

// ProWithdraw is a paid mutator transaction binding the contract method 0x69eafd02.
//
// Solidity: function proWithdraw(uint64 pIndex, uint32 tokenIndex, address pAddr, address tAddr, uint256 pay, uint256 lost) returns()
func (_FileSys *FileSysTransactor) ProWithdraw(opts *bind.TransactOpts, pIndex uint64, tokenIndex uint32, pAddr common.Address, tAddr common.Address, pay *big.Int, lost *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "proWithdraw", pIndex, tokenIndex, pAddr, tAddr, pay, lost)
}

// ProWithdraw is a paid mutator transaction binding the contract method 0x69eafd02.
//
// Solidity: function proWithdraw(uint64 pIndex, uint32 tokenIndex, address pAddr, address tAddr, uint256 pay, uint256 lost) returns()
func (_FileSys *FileSysSession) ProWithdraw(pIndex uint64, tokenIndex uint32, pAddr common.Address, tAddr common.Address, pay *big.Int, lost *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.ProWithdraw(&_FileSys.TransactOpts, pIndex, tokenIndex, pAddr, tAddr, pay, lost)
}

// ProWithdraw is a paid mutator transaction binding the contract method 0x69eafd02.
//
// Solidity: function proWithdraw(uint64 pIndex, uint32 tokenIndex, address pAddr, address tAddr, uint256 pay, uint256 lost) returns()
func (_FileSys *FileSysTransactorSession) ProWithdraw(pIndex uint64, tokenIndex uint32, pAddr common.Address, tAddr common.Address, pay *big.Int, lost *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.ProWithdraw(&_FileSys.TransactOpts, pIndex, tokenIndex, pAddr, tAddr, pay, lost)
}

// Recharge is a paid mutator transaction binding the contract method 0xe04f98ed.
//
// Solidity: function recharge(uint64 uIndex, uint32 tIndex, address uAddr, address tAddr, uint256 money) returns()
func (_FileSys *FileSysTransactor) Recharge(opts *bind.TransactOpts, uIndex uint64, tIndex uint32, uAddr common.Address, tAddr common.Address, money *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "recharge", uIndex, tIndex, uAddr, tAddr, money)
}

// Recharge is a paid mutator transaction binding the contract method 0xe04f98ed.
//
// Solidity: function recharge(uint64 uIndex, uint32 tIndex, address uAddr, address tAddr, uint256 money) returns()
func (_FileSys *FileSysSession) Recharge(uIndex uint64, tIndex uint32, uAddr common.Address, tAddr common.Address, money *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.Recharge(&_FileSys.TransactOpts, uIndex, tIndex, uAddr, tAddr, money)
}

// Recharge is a paid mutator transaction binding the contract method 0xe04f98ed.
//
// Solidity: function recharge(uint64 uIndex, uint32 tIndex, address uAddr, address tAddr, uint256 money) returns()
func (_FileSys *FileSysTransactorSession) Recharge(uIndex uint64, tIndex uint32, uAddr common.Address, tAddr common.Address, money *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.Recharge(&_FileSys.TransactOpts, uIndex, tIndex, uAddr, tAddr, money)
}

// SubOrder is a paid mutator transaction binding the contract method 0x8f6c3f03.
//
// Solidity: function subOrder(uint64 _kIndex, uint64 uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactor) SubOrder(opts *bind.TransactOpts, _kIndex uint64, uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "subOrder", _kIndex, uIndex, _pIndex, start, end, size, nonce, _tokenIndex, sprice)
}

// SubOrder is a paid mutator transaction binding the contract method 0x8f6c3f03.
//
// Solidity: function subOrder(uint64 _kIndex, uint64 uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysSession) SubOrder(_kIndex uint64, uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.SubOrder(&_FileSys.TransactOpts, _kIndex, uIndex, _pIndex, start, end, size, nonce, _tokenIndex, sprice)
}

// SubOrder is a paid mutator transaction binding the contract method 0x8f6c3f03.
//
// Solidity: function subOrder(uint64 _kIndex, uint64 uIndex, uint64 _pIndex, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 _tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactorSession) SubOrder(_kIndex uint64, uIndex uint64, _pIndex uint64, start uint64, end uint64, size uint64, nonce uint64, _tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.SubOrder(&_FileSys.TransactOpts, _kIndex, uIndex, _pIndex, start, end, size, nonce, _tokenIndex, sprice)
}

// SubRepair is a paid mutator transaction binding the contract method 0x75818519.
//
// Solidity: function subRepair(uint64 kIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactor) SubRepair(opts *bind.TransactOpts, kIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "subRepair", kIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// SubRepair is a paid mutator transaction binding the contract method 0x75818519.
//
// Solidity: function subRepair(uint64 kIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysSession) SubRepair(kIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.SubRepair(&_FileSys.TransactOpts, kIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// SubRepair is a paid mutator transaction binding the contract method 0x75818519.
//
// Solidity: function subRepair(uint64 kIndex, uint64 newPro, uint64 start, uint64 end, uint64 size, uint64 nonce, uint32 tokenIndex, uint256 sprice) returns()
func (_FileSys *FileSysTransactorSession) SubRepair(kIndex uint64, newPro uint64, start uint64, end uint64, size uint64, nonce uint64, tokenIndex uint32, sprice *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.SubRepair(&_FileSys.TransactOpts, kIndex, newPro, start, end, size, nonce, tokenIndex, sprice)
}

// Withdraw is a paid mutator transaction binding the contract method 0xbab8d63a.
//
// Solidity: function withdraw(uint64 index, uint32 tokenIndex, uint8 roleType, address tAddr, address addr, uint256 amount) returns()
func (_FileSys *FileSysTransactor) Withdraw(opts *bind.TransactOpts, index uint64, tokenIndex uint32, roleType uint8, tAddr common.Address, addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _FileSys.contract.Transact(opts, "withdraw", index, tokenIndex, roleType, tAddr, addr, amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0xbab8d63a.
//
// Solidity: function withdraw(uint64 index, uint32 tokenIndex, uint8 roleType, address tAddr, address addr, uint256 amount) returns()
func (_FileSys *FileSysSession) Withdraw(index uint64, tokenIndex uint32, roleType uint8, tAddr common.Address, addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.Withdraw(&_FileSys.TransactOpts, index, tokenIndex, roleType, tAddr, addr, amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0xbab8d63a.
//
// Solidity: function withdraw(uint64 index, uint32 tokenIndex, uint8 roleType, address tAddr, address addr, uint256 amount) returns()
func (_FileSys *FileSysTransactorSession) Withdraw(index uint64, tokenIndex uint32, roleType uint8, tAddr common.Address, addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _FileSys.Contract.Withdraw(&_FileSys.TransactOpts, index, tokenIndex, roleType, tAddr, addr, amount)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_FileSys *FileSysTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FileSys.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_FileSys *FileSysSession) Receive() (*types.Transaction, error) {
	return _FileSys.Contract.Receive(&_FileSys.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_FileSys *FileSysTransactorSession) Receive() (*types.Transaction, error) {
	return _FileSys.Contract.Receive(&_FileSys.TransactOpts)
}
